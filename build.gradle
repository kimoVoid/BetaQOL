plugins {
	id 'java'
	id 'maven-publish'
	id 'fabric-loom' version '1.8-SNAPSHOT' apply false
	id 'ploceus' version '1.8-SNAPSHOT' apply false
}

def configure(project) {
	project.apply plugin: 'java'
	project.apply plugin: 'maven-publish'
	project.apply plugin: 'fabric-loom'
	project.apply plugin: 'ploceus'

	project.base {
		archivesName = "${project.rootProject.archives_base_name}-${project.environment}"
	}
	project.version = "${project.rootProject.version}+${project.rootProject.minecraft_version}"
	project.maven_group = project.rootProject.maven_group

	project.loom {
		if (project.environment == 'client') {
			clientOnlyMinecraftJar()
		}
		if (project.environment == 'server') {
			serverOnlyMinecraftJar()
		}
	}

	project.ploceus {
		if (project.environment == 'client') {
			clientOnlyMappings()
		}
		if (project.environment == 'server') {
			serverOnlyMappings()
		}
	}

	project.repositories {
		jcenter()
		maven {
			url "https://libraries.minecraft.net/"
		}
		mavenCentral()
	}

    project.loom {
        runs {
            client {
                vmArgs "-Dsun.java2d.uiScale=1"
            }
        }
    }

	project.dependencies {
		minecraft "com.mojang:minecraft:${project.rootProject.minecraft_version}"

		mappings project.ploceus.featherMappings(project.feather_build)
		nests project.ploceus.nests(project.nests_build)

		exceptions project.ploceus.raven('1')
		signatures project.ploceus.sparrow('1')

		modImplementation "net.fabricmc:fabric-loader:${project.rootProject.loader_version}"

		//project.ploceus.addCommonLibraries();
		project.ploceus.dependOsl(project.osl_version, project.environment)
		project.ploceus.dependOslModule('core', '0.6.0', project.environment)
	}

	project.sourceSets {
		main {
			java {
				srcDirs += project.rootProject.sourceSets.main.java.srcDirs
			}
			resources {
				srcDirs += project.rootProject.sourceSets.main.resources.srcDirs
			}
		}
	}

	project.processResources {
		filesMatching('fabric.mod.json') {
			expand project.properties
		}
	}

	project.tasks.withType(JavaCompile).configureEach {
		it.options.compilerArgs.add("-XDignore.symbol.file=true")
		it.options.encoding = 'UTF-8'
		it.options.release = 8
	}

	project.java {
		sourceCompatibility = JavaVersion.VERSION_1_8
		targetCompatibility = JavaVersion.VERSION_1_8

		withSourcesJar()
	}

	project.jar {
		from('LICENSE') {
			rename { "${it}_${project.base.archivesName.get()}" }
		}
	}

	project.publishing {
		publications {
			mavenJava(MavenPublication) {
				from project.components.java
			}
		}

		repositories {
			maven {
				name = "repositoryReleases"
				url = System.getenv().RELEASES_URL
				credentials(PasswordCredentials)
				authentication {
					basic(BasicAuthentication)
				}
			}
		}
	}
}